import 'dart:io';
import 'package:flutter/material.dart';
import '../models.dart';
import '../services/emulator_helper.dart';
import '../ui/ps5_theme.dart';

class EmulatorGameGrid extends StatelessWidget {
  final List<GameData> games;
  final int columns;
  final int selectedIndex;
  final int focusedAppBar;
  final int focusedActionIndex;
  final Function(int) onSelect;
  final Function(int) onLongPress;
  final Function(int) onDelete;
  final Function(int) onRename;
  final Function(int) onChangeIcon;

  const EmulatorGameGrid({
    Key? key,
    required this.games,
    required this.columns,
    required this.selectedIndex,
    required this.focusedAppBar,
    required this.focusedActionIndex,
    required this.onSelect,
    required this.onLongPress,
    required this.onDelete,
    required this.onRename,
    required this.onChangeIcon,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return GridView.builder(
      padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 12),
      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
        crossAxisCount: columns,
        crossAxisSpacing: 20,
        mainAxisSpacing: 20,
        childAspectRatio: 1.2,
      ),
      itemCount: games.length,
      itemBuilder: (context, i) {
        final g = games[i];
        final selected = i == selectedIndex && focusedAppBar == -1;
        String? coverPath;
        try {
          if (g.coverUrl != null && g.coverUrl!.isNotEmpty && File(g.coverUrl!).existsSync()) {
            coverPath = g.coverUrl!;
          }
        } catch (_) {
          coverPath = null;
        }
        final Widget? subtitleWidget = coverPath == null
            ? Padding(
                padding: const EdgeInsets.only(top: 6.0),
                child: Text(
                  g.path,
                  maxLines: 2,
                  overflow: TextOverflow.ellipsis,
                  style: const TextStyle(fontSize: 11),
                ),
              )
            : null;
        final isActionMode = selected && focusedActionIndex != -1;
        final actionFocusedIndexForThis = isActionMode ? focusedActionIndex : -1;
        return PS5EmulatorCard(
          title: g.displayName.isEmpty ? g.path.split(Platform.pathSeparator).last : g.displayName,
          iconAsset: EmulatorHelper.getEmulatorIcon(g.emulatorName ?? ''),
          isSelected: selected,
          coverPath: coverPath,
          actionMode: isActionMode,
          actionFocusedIndex: actionFocusedIndexForThis,
          onTap: () => onSelect(i),
          onLongPress: () => onLongPress(i),
          onDelete: () => onDelete(i),
          onRename: () => onRename(i),
          onChangeIcon: () => onChangeIcon(i),
          subtitle: subtitleWidget,
        );
      },
    );
  }
}
